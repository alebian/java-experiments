plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
}

group = 'com.alebian'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('springCloudVersion', "2020.0.4")
	set('testcontainersVersion', "1.16.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
//	implementation 'org.springframework.boot:spring-boot-starter-amqp'
//	implementation 'org.springframework.boot:spring-boot-starter-batch'
//	implementation 'org.springframework.boot:spring-boot-starter-cache'
//	implementation 'org.springframework.boot:spring-boot-starter-data-cassandra'
//	implementation 'org.springframework.boot:spring-boot-starter-data-cassandra-reactive'
//	implementation 'org.springframework.boot:spring-boot-starter-data-couchbase'
//	implementation 'org.springframework.boot:spring-boot-starter-data-couchbase-reactive'
//	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
//	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
//	implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
//	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
//	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
//	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
//	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
//	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
//	implementation 'org.springframework.boot:spring-boot-starter-jersey'
//	implementation 'org.springframework.boot:spring-boot-starter-mail'
//	implementation 'org.springframework.boot:spring-boot-starter-quartz'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.boot:spring-boot-starter-webflux'
//	implementation 'org.apache.camel.springboot:camel-spring-boot-starter:3.12.0'
//	implementation 'org.apache.kafka:kafka-streams'
//	implementation 'org.liquibase:liquibase-core'
//	implementation 'org.springframework.cloud:spring-cloud-bus'
//	implementation 'org.springframework.cloud:spring-cloud-function-web'
//	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
//	implementation 'org.springframework.cloud:spring-cloud-starter-task'
//	implementation 'org.springframework.cloud:spring-cloud-stream'
//	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
//	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams'
//	implementation 'org.springframework.cloud:spring-cloud-stream-binder-rabbit'
	implementation 'org.springframework.kafka:spring-kafka'
//	implementation 'org.springframework.session:spring-session-data-redis'
//	implementation 'org.springframework.session:spring-session-jdbc'

	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

//	runtimeOnly 'com.h2database:h2'
//	runtimeOnly 'io.micrometer:micrometer-registry-influx'
//	runtimeOnly 'io.r2dbc:r2dbc-h2'
//	runtimeOnly 'io.r2dbc:r2dbc-postgresql'
//	runtimeOnly 'org.postgresql:postgresql'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'io.projectreactor:reactor-test'
//	testImplementation 'org.springframework.amqp:spring-rabbit-test'
//	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
//	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
//	testImplementation 'org.springframework.security:spring-security-test'
//	testImplementation 'org.testcontainers:cassandra'
//	testImplementation 'org.testcontainers:couchbase'
//	testImplementation 'org.testcontainers:elasticsearch'
//	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:kafka'
//	testImplementation 'org.testcontainers:mongodb'
//	testImplementation 'org.testcontainers:neo4j'
//	testImplementation 'org.testcontainers:postgresql'
//	testImplementation 'org.testcontainers:r2dbc'
//	testImplementation 'org.testcontainers:rabbitmq'
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}
